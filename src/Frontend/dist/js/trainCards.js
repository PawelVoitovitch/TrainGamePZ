"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var i={},t=Object.prototype,s=t.hasOwnProperty,l=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(t){a=function(t,e,r){return t[e]=r}}function c(t,e,r,n){var o,a,i,c,e=e&&e.prototype instanceof f?e:f,e=Object.create(e.prototype),n=new L(n||[]);return l(e,"_invoke",{value:(o=t,a=r,i=n,c="suspendedStart",function(t,e){if("executing"===c)throw new Error("Generator is already running");if("completed"===c){if("throw"===t)throw e;return x()}for(i.method=t,i.arg=e;;){var r=i.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(void 0===o)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=void 0,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;n=u(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,d;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,d):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,d)}(r,i);if(r){if(r===d)continue;return r}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===c)throw c="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c="executing";r=u(o,a,i);if("normal"===r.type){if(c=i.done?"completed":"suspendedYield",r.arg===d)continue;return{value:r.arg,done:i.done}}"throw"===r.type&&(c="completed",i.method="throw",i.arg=r.arg)}})}),e}function u(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var d={};function f(){}function h(){}function p(){}var e={},y=(a(e,n,function(){return this}),Object.getPrototypeOf),y=y&&y(y(C([]))),v=(y&&y!==t&&s.call(y,n)&&(e=y),p.prototype=f.prototype=Object.create(e));function m(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function g(i,c){var e;l(this,"_invoke",{value:function(r,n){function t(){return new c(function(t,e){!function e(t,r,n,o){var a,t=u(i[t],i,r);if("throw"!==t.type)return(r=(a=t.arg).value)&&"object"==_typeof(r)&&s.call(r,"__await")?c.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):c.resolve(r).then(function(t){a.value=t,n(a)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function b(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function L(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(b,this),this.reset(!0)}function C(e){if(e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(s.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:x}}function x(){return{value:void 0,done:!0}}return l(v,"constructor",{value:h.prototype=p,configurable:!0}),l(p,"constructor",{value:h,configurable:!0}),h.displayName=a(p,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,p):(t.__proto__=p,a(t,o,"GeneratorFunction")),t.prototype=Object.create(v),t},i.awrap=function(t){return{__await:t}},m(g.prototype),a(g.prototype,r,function(){return this}),i.AsyncIterator=g,i.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var a=new g(c(t,e,r,n),o);return i.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},m(v),a(v,o,"Generator"),a(v,n,function(){return this}),a(v,"toString",function(){return"[object Generator]"}),i.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},i.values=C,L.prototype={constructor:L,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return a.type="throw",a.arg=r,n.next=t,e&&(n.method="next",n.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=s.call(o,"catchLoc"),c=s.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),w(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,w(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:C(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},i}function asyncGeneratorStep(t,e,r,n,o,a,i){try{var c=t[a](i),s=c.value}catch(t){return void r(t)}c.done?e(s):Promise.resolve(s).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(e,r){var n=c.apply(t,i);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var trainsCardsActive=document.querySelectorAll(".trainCardsActive img"),trainsCardsArray=Array.from(trainsCardsActive),blindTickets=document.querySelector(".matchTickets"),visibleTrains=[],availableColors=[],card1=null,card2=null,visibleTrainsFromURL=urlParams.get("visibleTrains");function sendCardsData(t){fetch(url+"/game/turn/drawTrains",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}).then(function(t){if(t.ok)return t.json();throw new Error("Network response was not ok")}).then(function(t){visibleTrains=t.visibleTrains,null===card2?(card1.classList.remove("selected"),card1=null):(card1.classList.remove("selected"),card2.classList.remove("selected"),card2=card1=null)}).catch(function(t){console.error("Error sending cards data:",t),null===card2?(card1.classList.remove("selected"),card1=null):(card1.classList.remove("selected"),card2.classList.remove("selected"),card2=card1=null)})}function updateBoard(t){updateVisibleCards(t)}function updateCards(t){card1?card2||card1.getAttribute("src").includes("RAINBOW")||t.getAttribute("src").includes("RAINBOW")?handleSelectedCards():handleSecondCard(t):handleFirstCard(t)}function handleFirstCard(t){if((card1=t).classList.add("selected"),card1.getAttribute("src").includes("RAINBOW"))return sendCardsData(t={player:playerName,gameId:gameId,fromVisible:[card1.getAttribute("src").match(/Train(.+)Card/)[1].toUpperCase()],blind:[]}),t}function handleSecondCard(t){var e;if((card2=t).classList.add("selected"),card1!==card2)return t=card1.getAttribute("src"),e=card2.getAttribute("src"),t=t.match(/Train(.+)Card/)[1],e=e.match(/Train(.+)Card/)[1],sendCardsData(t={player:playerName,gameId:gameId,fromVisible:[t.toUpperCase(),e.toUpperCase()],blind:[]}),t;card1.classList.remove("selected"),card1=null,card2.classList.remove("selected"),card2=null}function handleSelectedCards(){setPopup("select rainbow card first"),showPopup(),card1.classList.remove("selected"),card1=null,alertPopupBtn.addEventListener("click",removePopup)}function updateVisibleCards(r){trainsCardsArray.forEach(function(t,e){e=r[e],e="../dist/img/Train".concat(e,"Card.png");t.setAttribute("src",e)})}function sendBlind(){return _sendBlind.apply(this,arguments)}function _sendBlind(){return(_sendBlind=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e,r;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e=[availableColors[0],availableColors[1]],r={player:playerName,gameId:gameId,fromVisible:[],blind:e},t.next=4,fetch(url+"/game/turn/drawTrains",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}});case 4:return r=t.sent,t.next=7,r.json();case 7:t.sent,e=[],console.log(availableColors);case 10:case"end":return t.stop()}},t)}))).apply(this,arguments)}function getRandomColor(t){return t[Math.floor(Math.random()*t.length)]}visibleTrains=atob(visibleTrainsFromURL).split(","),console.log(visibleTrains),updateVisibleCards(visibleTrains),trainsCardsActive.forEach(function(t){t.addEventListener("click",function(){updateCards(t)})}),blindTickets.addEventListener("click",sendBlind);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

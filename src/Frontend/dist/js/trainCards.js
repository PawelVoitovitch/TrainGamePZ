"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return a};var a={},t=Object.prototype,s=t.hasOwnProperty,u=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function i(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{i({},"")}catch(t){i=function(t,e,r){return t[e]=r}}function c(t,e,r,n){var o,i,a,c,e=e&&e.prototype instanceof f?e:f,e=Object.create(e.prototype),n=new L(n||[]);return u(e,"_invoke",{value:(o=t,i=r,a=n,c="suspendedStart",function(t,e){if("executing"===c)throw new Error("Generator is already running");if("completed"===c){if("throw"===t)throw e;return C()}for(a.method=t,a.arg=e;;){var r=a.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(void 0===o)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=void 0,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;n=l(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,d;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,d):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,d)}(r,a);if(r){if(r===d)continue;return r}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if("suspendedStart"===c)throw c="completed",a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);c="executing";r=l(o,i,a);if("normal"===r.type){if(c=a.done?"completed":"suspendedYield",r.arg===d)continue;return{value:r.arg,done:a.done}}"throw"===r.type&&(c="completed",a.method="throw",a.arg=r.arg)}})}),e}function l(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}a.wrap=c;var d={};function f(){}function h(){}function p(){}var e={},y=(i(e,n,function(){return this}),Object.getPrototypeOf),y=y&&y(y(x([]))),v=(y&&y!==t&&s.call(y,n)&&(e=y),p.prototype=f.prototype=Object.create(e));function m(t){["next","throw","return"].forEach(function(e){i(t,e,function(t){return this._invoke(e,t)})})}function g(a,c){var e;u(this,"_invoke",{value:function(r,n){function t(){return new c(function(t,e){!function e(t,r,n,o){var i,t=l(a[t],a,r);if("throw"!==t.type)return(r=(i=t.arg).value)&&"object"==_typeof(r)&&s.call(r,"__await")?c.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):c.resolve(r).then(function(t){i.value=t,n(i)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function b(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function L(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(b,this),this.reset(!0)}function x(e){if(e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(s.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:C}}function C(){return{value:void 0,done:!0}}return u(v,"constructor",{value:h.prototype=p,configurable:!0}),u(p,"constructor",{value:h,configurable:!0}),h.displayName=i(p,o,"GeneratorFunction"),a.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},a.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,p):(t.__proto__=p,i(t,o,"GeneratorFunction")),t.prototype=Object.create(v),t},a.awrap=function(t){return{__await:t}},m(g.prototype),i(g.prototype,r,function(){return this}),a.AsyncIterator=g,a.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var i=new g(c(t,e,r,n),o);return a.isGeneratorFunction(e)?i:i.next().then(function(t){return t.done?t.value:i.next()})},m(v),i(v,o,"Generator"),i(v,n,function(){return this}),i(v,"toString",function(){return"[object Generator]"}),a.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},a.values=x,L.prototype={constructor:L,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return i.type="throw",i.arg=r,n.next=t,e&&(n.method="next",n.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],i=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var a=s.call(o,"catchLoc"),c=s.call(o,"finallyLoc");if(a&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var i=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),w(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,w(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:x(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},a}function asyncGeneratorStep(t,e,r,n,o,i,a){try{var c=t[i](a),s=c.value}catch(t){return void r(t)}c.done?e(s):Promise.resolve(s).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,a=arguments;return new Promise(function(e,r){var n=c.apply(t,a);function o(t){asyncGeneratorStep(n,e,r,o,i,"next",t)}function i(t){asyncGeneratorStep(n,e,r,o,i,"throw",t)}o(void 0)})}}var trainsCardsActive=document.querySelectorAll(".trainCardsActive img"),trainsCardsArray=Array.from(trainsCardsActive),blindTickets=document.querySelector(".matchTickets"),visibleTrains=[],availableColors=[],card1=null,card2=null;function sendCardsData(t){fetch(url+"/game/turn/drawTrains",{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}).then(function(t){if(t.ok)return t.json();throw new Error("Network response was not ok")}).then(function(t){visibleTrains=t.visibleTrains,null===card2?(card1.classList.remove("selected"),card1=null):(card1.classList.remove("selected"),card2.classList.remove("selected"),card2=card1=null)}).catch(function(t){console.error("Error sending cards data:",t),null===card2?(card1.classList.remove("selected"),card1=null):(card1.classList.remove("selected"),card2.classList.remove("selected"),card2=card1=null)})}function updateBoard(t){updateVisibleCards(t)}function updateCards(t){var e,r;if(card1){if(!card2&&!card1.getAttribute("src").includes("RAINBOW"))return(card2=t).classList.add("selected"),e=card1.getAttribute("src"),r=card2.getAttribute("src"),e=e.match(/Train(.+)Card/)[1],r=r.match(/Train(.+)Card/)[1],sendCardsData(e={player:playerName,gameId:gameId,fromVisible:[e.toUpperCase(),r.toUpperCase()],blind:[]}),e}else if((card1=t).classList.add("selected"),card1.getAttribute("src").includes("RAINBOW"))return sendCardsData(r={player:playerName,gameId:gameId,fromVisible:[card1.getAttribute("src").match(/Train(.+)Card/)[1].toUpperCase()],blind:[]}),r}function updateVisibleCards(r){trainsCardsArray.forEach(function(t,e){e=r[e],e="../dist/img/Train".concat(e,"Card.png");t.setAttribute("src",e)})}function sendBlind(){return _sendBlind.apply(this,arguments)}function _sendBlind(){return(_sendBlind=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e,r;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e=[availableColors[0],availableColors[1]],r={player:playerName,gameId:gameId,fromVisible:[],blind:e},t.next=4,fetch(url+"/game/turn/drawTrains",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}});case 4:return r=t.sent,t.next=7,r.json();case 7:t.sent,e=[],console.log(availableColors);case 10:case"end":return t.stop()}},t)}))).apply(this,arguments)}function getRandomColor(t){return t[Math.floor(Math.random()*t.length)]}visibleTrains=urlParams.get("visibleTrains").split(","),console.log(visibleTrains),updateVisibleCards(visibleTrains),trainsCardsActive.forEach(function(t){t.addEventListener("click",function(){updateCards(t)})}),blindTickets.addEventListener("click",sendBlind);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYWluQ2FyZHMuanMiXSwibmFtZXMiOlsiX3JlZ2VuZXJhdG9yUnVudGltZSIsImV4cG9ydHMiLCJPcCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093biIsImhhc093blByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJkZXNjIiwidmFsdWUiLCIkU3ltYm9sIiwiU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJpdGVyYXRvciIsImFzeW5jSXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImVyciIsIndyYXAiLCJpbm5lckZuIiwib3V0ZXJGbiIsInNlbGYiLCJ0cnlMb2NzTGlzdCIsImNvbnRleHQiLCJzdGF0ZSIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiY3JlYXRlIiwiQ29udGV4dCIsIm1ldGhvZCIsImFyZyIsIkVycm9yIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlIiwiZGVsZWdhdGVSZXN1bHQiLCJtYXliZUludm9rZURlbGVnYXRlIiwibWV0aG9kTmFtZSIsInVuZGVmaW5lZCIsIlR5cGVFcnJvciIsIkNvbnRpbnVlU2VudGluZWwiLCJyZWNvcmQiLCJ0cnlDYXRjaCIsInR5cGUiLCJpbmZvIiwiZG9uZSIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiZm4iLCJjYWxsIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiZ2V0UHJvdG8iLCJ0aGlzIiwiZ2V0UHJvdG90eXBlT2YiLCJOYXRpdmVJdGVyYXRvclByb3RvdHlwZSIsInZhbHVlcyIsIkdwIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiUHJvbWlzZUltcGwiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsInJlc29sdmUiLCJyZWplY3QiLCJpbnZva2UiLCJyZXN1bHQiLCJfdHlwZW9mIiwiX19hd2FpdCIsInRoZW4iLCJ1bndyYXBwZWQiLCJlcnJvciIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJlbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXRlcmFibGUiLCJpIiwiaXRlcmF0b3JNZXRob2QiLCJpc05hTiIsImxlbmd0aCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsIml0ZXIiLCJrZXlzIiwidmFsIiwib2JqZWN0IiwicmV2ZXJzZSIsInBvcCIsInNraXBUZW1wUmVzZXQiLCJwcmV2IiwiY2hhckF0Iiwic2xpY2UiLCJzdG9wIiwicm9vdFJlY29yZCIsInJ2YWwiLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImZpbmlzaCIsImNhdGNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsIl9uZXh0IiwiX3Rocm93IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJ0cmFpbnNDYXJkc0FjdGl2ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInRyYWluc0NhcmRzQXJyYXkiLCJBcnJheSIsImZyb20iLCJibGluZFRpY2tldHMiLCJxdWVyeVNlbGVjdG9yIiwidmlzaWJsZVRyYWlucyIsImF2YWlsYWJsZUNvbG9ycyIsImNhcmQxIiwic2VuZENhcmRzRGF0YSIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwidXBkYXRlVmlzaWJsZUNhcmRzIiwiaGVhZGVycyIsImZldGNoIiwicmVzcG9uc2UiLCJvayIsImNhcmQyIiwicmVtb3ZlIiwiY2xhc3NMaXN0IiwidXBkYXRlQ2FyZHMiLCJjYXJkIiwicGxheWVyIiwiZ2FtZUlkIiwicGxheWVyTmFtZSIsImdldEF0dHJpYnV0ZSIsImluY2x1ZGVzIiwiZnJvbVZpc2libGUiLCJhZGQiLCJjb2xvcjEiLCJ0b1VwcGVyQ2FzZSIsInNyYzEiLCJtYXRjaCIsImNvbG9yMiIsInNyYzIiLCJjb2xvciIsIm5ld1NyYyIsInNldEF0dHJpYnV0ZSIsImJsaW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9zZW5kQmxpbmQiLCJhcnIiLCJpbmRleCIsImNvbmNhdCIsInNlbmRCbGluZCIsIl9jYWxsZWUiLCJfY29udGV4dCIsInVybCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiQ29udGVudC1UeXBlIiwianNvbiIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInVybFBhcmFtcyIsInNwbGl0Il0sIm1hcHBpbmdzIjoiNlJBQ0FBLG9CQUFBLFdBQUEsT0FBQUMsQ0FBQSxFQUFBLElBQUFBLEVBQUEsR0FBQUMsRUFBQUMsT0FBQUMsVUFBQUMsRUFBQUgsRUFBQUksZUFBQUMsRUFBQUosT0FBQUksZ0JBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FBQUYsRUFBQUMsR0FBQUMsRUFBQUMsS0FBQSxFQUFBQyxFQUFBLFlBQUEsT0FBQUMsT0FBQUEsT0FBQSxHQUFBQyxFQUFBRixFQUFBRyxVQUFBLGFBQUFDLEVBQUFKLEVBQUFLLGVBQUEsa0JBQUFDLEVBQUFOLEVBQUFPLGFBQUEsZ0JBQUEsU0FBQUMsRUFBQVosRUFBQUMsRUFBQUUsR0FB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QWpELEVBQUF2RCxNQUFBLEVBS0QsQ0F6SUFzRCxjQUFrQm1ELFVBQUcxRCxJQUFTTSxlQUFjLEVBQUFxRCxNQUFBLEdBQUEsRUFDNUMvQyxRQUFJTCxJQUFBQSxhQUFrQixFQUN0Qk8sbUJBQW1CUCxhQUFLLEVBdUd4QlIsa0JBU1M3RSxRQUFDc0YsU0FBQUEsR0FSVGUsRUFBS2tCLGlCQVVRLFFBQUEsV0FUWm5CLFlBVUFFLENBQU0sQ0FUUCxDQUFDLENBQ0YsQ0FBQyxFQTRCRG5CLGFBQUFvQyxpQkFBQSxRQUFBSyxTQUFBIiwiZmlsZSI6InRyYWluQ2FyZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0cmFpbnNDYXJkc0FjdGl2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudHJhaW5DYXJkc0FjdGl2ZSBpbWdcIik7XHJcbmNvbnN0IHRyYWluc0NhcmRzQXJyYXkgPSBBcnJheS5mcm9tKHRyYWluc0NhcmRzQWN0aXZlKTtcclxuY29uc3QgYmxpbmRUaWNrZXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYXRjaFRpY2tldHNcIik7XHJcbmxldCB2aXNpYmxlVHJhaW5zID0gW107XHJcbmxldCBhdmFpbGFibGVDb2xvcnMgPSBbXTtcclxubGV0IGNhcmQxID0gbnVsbDtcclxubGV0IGNhcmQyID0gbnVsbDtcclxuXHJcbnZpc2libGVUcmFpbnMgPSB1cmxQYXJhbXMuZ2V0KFwidmlzaWJsZVRyYWluc1wiKS5zcGxpdChcIixcIik7XHJcbmNvbnNvbGUubG9nKHZpc2libGVUcmFpbnMpO1xyXG51cGRhdGVWaXNpYmxlQ2FyZHModmlzaWJsZVRyYWlucyk7XHJcblxyXG5mdW5jdGlvbiBzZW5kQ2FyZHNEYXRhKGRhdGEpIHtcclxuXHRmZXRjaCh1cmwgKyBcIi9nYW1lL3R1cm4vZHJhd1RyYWluc1wiLCB7XHJcblx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcblx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG5cdFx0fSxcclxuXHR9KVxyXG5cdFx0LnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcblx0XHRcdGlmICghcmVzcG9uc2Uub2spIHtcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3Qgb2tcIik7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuXHRcdH0pXHJcblx0XHQudGhlbigoZGF0YSkgPT4ge1xyXG5cdFx0XHR2aXNpYmxlVHJhaW5zID0gZGF0YS52aXNpYmxlVHJhaW5zO1xyXG5cclxuXHRcdFx0aWYgKGNhcmQyID09PSBudWxsKSB7XHJcblx0XHRcdFx0Y2FyZDEuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG5cdFx0XHRcdGNhcmQxID0gbnVsbDtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRjYXJkMS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcblx0XHRcdFx0Y2FyZDIuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG5cdFx0XHRcdGNhcmQxID0gbnVsbDtcclxuXHRcdFx0XHRjYXJkMiA9IG51bGw7XHJcblx0XHRcdH1cclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goKGVycm9yKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUuZXJyb3IoXCJFcnJvciBzZW5kaW5nIGNhcmRzIGRhdGE6XCIsIGVycm9yKTtcclxuXHRcdFx0aWYgKGNhcmQyID09PSBudWxsKSB7XHJcblx0XHRcdFx0Y2FyZDEuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG5cdFx0XHRcdGNhcmQxID0gbnVsbDtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRjYXJkMS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcblx0XHRcdFx0Y2FyZDIuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG5cdFx0XHRcdGNhcmQxID0gbnVsbDtcclxuXHRcdFx0XHRjYXJkMiA9IG51bGw7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVCb2FyZChkYXRhKSB7XHJcblx0dXBkYXRlVmlzaWJsZUNhcmRzKGRhdGEpO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVDYXJkcyhjYXJkKSB7XHJcblx0aWYgKCFjYXJkMSkge1xyXG5cdFx0Y2FyZDEgPSBjYXJkO1xyXG5cdFx0Y2FyZDEuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG5cdFx0aWYgKGNhcmQxLmdldEF0dHJpYnV0ZShcInNyY1wiKS5pbmNsdWRlcyhcIlJBSU5CT1dcIikpIHtcclxuXHRcdFx0Y29uc3QgZGF0YSA9IHtcclxuXHRcdFx0XHRwbGF5ZXI6IHBsYXllck5hbWUsXHJcblx0XHRcdFx0Z2FtZUlkOiBnYW1lSWQsXHJcblx0XHRcdFx0ZnJvbVZpc2libGU6IFtcclxuXHRcdFx0XHRcdGNhcmQxXHJcblx0XHRcdFx0XHRcdC5nZXRBdHRyaWJ1dGUoXCJzcmNcIilcclxuXHRcdFx0XHRcdFx0Lm1hdGNoKC9UcmFpbiguKylDYXJkLylbMV1cclxuXHRcdFx0XHRcdFx0LnRvVXBwZXJDYXNlKCksXHJcblx0XHRcdFx0XSxcclxuXHRcdFx0XHRibGluZDogW10sXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHRzZW5kQ2FyZHNEYXRhKGRhdGEpO1xyXG5cdFx0XHRyZXR1cm4gZGF0YTtcclxuXHRcdH1cclxuXHR9IGVsc2UgaWYgKCFjYXJkMiAmJiAhY2FyZDEuZ2V0QXR0cmlidXRlKFwic3JjXCIpLmluY2x1ZGVzKFwiUkFJTkJPV1wiKSkge1xyXG5cdFx0Y2FyZDIgPSBjYXJkO1xyXG5cdFx0Y2FyZDIuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG5cclxuXHRcdGNvbnN0IHNyYzEgPSBjYXJkMS5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XHJcblx0XHRjb25zdCBzcmMyID0gY2FyZDIuZ2V0QXR0cmlidXRlKFwic3JjXCIpO1xyXG5cclxuXHRcdGNvbnN0IGNvbG9yMSA9IHNyYzEubWF0Y2goL1RyYWluKC4rKUNhcmQvKVsxXTtcclxuXHRcdGNvbnN0IGNvbG9yMiA9IHNyYzIubWF0Y2goL1RyYWluKC4rKUNhcmQvKVsxXTtcclxuXHJcblx0XHRjb25zdCBkYXRhID0ge1xyXG5cdFx0XHRwbGF5ZXI6IHBsYXllck5hbWUsXHJcblx0XHRcdGdhbWVJZDogZ2FtZUlkLFxyXG5cdFx0XHRmcm9tVmlzaWJsZTogW2NvbG9yMS50b1VwcGVyQ2FzZSgpLCBjb2xvcjIudG9VcHBlckNhc2UoKV0sXHJcblx0XHRcdGJsaW5kOiBbXSxcclxuXHRcdH07XHJcblxyXG5cdFx0c2VuZENhcmRzRGF0YShkYXRhKTtcclxuXHRcdHJldHVybiBkYXRhO1xyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gdXBkYXRlVmlzaWJsZUNhcmRzKGFycikge1xyXG5cdHRyYWluc0NhcmRzQXJyYXkuZm9yRWFjaCgoY2FyZCwgaW5kZXgpID0+IHtcclxuXHRcdGNvbnN0IGNvbG9yID0gYXJyW2luZGV4XTtcclxuXHRcdGNvbnN0IG5ld1NyYyA9IGAuLi9kaXN0L2ltZy9UcmFpbiR7Y29sb3J9Q2FyZC5wbmdgO1xyXG5cdFx0Y2FyZC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgbmV3U3JjKTtcclxuXHR9KTtcclxufVxyXG5cclxudHJhaW5zQ2FyZHNBY3RpdmUuZm9yRWFjaCgoY2FyZCkgPT4ge1xyXG5cdGNhcmQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuXHRcdHVwZGF0ZUNhcmRzKGNhcmQpO1xyXG5cdH0pO1xyXG59KTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHNlbmRCbGluZCgpIHtcclxuXHRsZXQgYmxpbmQ7XHJcblxyXG5cdGJsaW5kID0gW2F2YWlsYWJsZUNvbG9yc1swXSwgYXZhaWxhYmxlQ29sb3JzWzFdXTtcclxuXHJcblx0Y29uc3QgZGF0YSA9IHtcclxuXHRcdHBsYXllcjogcGxheWVyTmFtZSxcclxuXHRcdGdhbWVJZDogZ2FtZUlkLFxyXG5cdFx0ZnJvbVZpc2libGU6IFtdLFxyXG5cdFx0YmxpbmQ6IGJsaW5kLFxyXG5cdH07XHJcblx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwgKyBcIi9nYW1lL3R1cm4vZHJhd1RyYWluc1wiLCB7XHJcblx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcblx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG5cdFx0fSxcclxuXHR9KTtcclxuXHRjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcblx0YmxpbmQgPSBbXTtcclxuXHRjb25zb2xlLmxvZyhhdmFpbGFibGVDb2xvcnMpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRSYW5kb21Db2xvcihhdmFpbGFibGVDb2xvcnMpIHtcclxuXHRjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGF2YWlsYWJsZUNvbG9ycy5sZW5ndGgpO1xyXG5cdHJldHVybiBhdmFpbGFibGVDb2xvcnNbcmFuZG9tSW5kZXhdO1xyXG59XHJcblxyXG5ibGluZFRpY2tldHMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlbmRCbGluZCk7XHJcbiJdfQ==

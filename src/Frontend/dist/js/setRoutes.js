"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var i={},t=Object.prototype,u=t.hasOwnProperty,l=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(t){a=function(t,e,r){return t[e]=r}}function c(t,e,r,n){var o,a,i,c,e=e&&e.prototype instanceof f?e:f,e=Object.create(e.prototype),n=new _(n||[]);return l(e,"_invoke",{value:(o=t,a=r,i=n,c="suspendedStart",function(t,e){if("executing"===c)throw new Error("Generator is already running");if("completed"===c){if("throw"===t)throw e;return P()}for(i.method=t,i.arg=e;;){var r=i.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(void 0===o)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=void 0,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),p;n=s(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,p;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,p):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,p)}(r,i);if(r){if(r===p)continue;return r}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===c)throw c="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c="executing";r=s(o,a,i);if("normal"===r.type){if(c=i.done?"completed":"suspendedYield",r.arg===p)continue;return{value:r.arg,done:i.done}}"throw"===r.type&&(c="completed",i.method="throw",i.arg=r.arg)}})}),e}function s(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var p={};function f(){}function h(){}function d(){}var e={},y=(a(e,n,function(){return this}),Object.getPrototypeOf),y=y&&y(y(b([]))),g=(y&&y!==t&&u.call(y,n)&&(e=y),d.prototype=f.prototype=Object.create(e));function v(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function m(i,c){var e;l(this,"_invoke",{value:function(r,n){function t(){return new c(function(t,e){!function e(t,r,n,o){var a,t=s(i[t],i,r);if("throw"!==t.type)return(r=(a=t.arg).value)&&"object"==_typeof(r)&&u.call(r,"__await")?c.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):c.resolve(r).then(function(t){a.value=t,n(a)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function x(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function _(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function b(e){if(e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(u.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:P}}function P(){return{value:void 0,done:!0}}return l(g,"constructor",{value:h.prototype=d,configurable:!0}),l(d,"constructor",{value:h,configurable:!0}),h.displayName=a(d,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,a(t,o,"GeneratorFunction")),t.prototype=Object.create(g),t},i.awrap=function(t){return{__await:t}},v(m.prototype),a(m.prototype,r,function(){return this}),i.AsyncIterator=m,i.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var a=new m(c(t,e,r,n),o);return i.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},v(g),a(g,o,"Generator"),a(g,n,function(){return this}),a(g,"toString",function(){return"[object Generator]"}),i.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},i.values=b,_.prototype={constructor:_,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!t)for(var e in this)"t"===e.charAt(0)&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return a.type="throw",a.arg=r,n.next=t,e&&(n.method="next",n.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=u.call(o,"catchLoc"),c=u.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&u.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),p},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),x(r),p}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,x(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:b(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),p}},i}function asyncGeneratorStep(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(e,r){var n=c.apply(t,i);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var color,routeBox=document.querySelectorAll(".routeBox"),cardBoxes=document.querySelectorAll(".cardBox"),trainPopup=document.querySelector(".trainPopup"),cards=document.querySelectorAll(".trainPopupCard"),alertPopupBtn=document.querySelector(".alertPopup_btn"),currentBoard=[],cardsQuantity={},cardsToUse=[];function getPlayerColor(t){return _getPlayerColor.apply(this,arguments)}function _getPlayerColor(){return(_getPlayerColor=_asyncToGenerator(_regeneratorRuntime().mark(function t(e){var r;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,getPlayers(gameId);case 2:return r=t.sent,r=r.find(function(t){return t.login===e}),t.abrupt("return",r.playerColor);case 5:case"end":return t.stop()}},t)}))).apply(this,arguments)}function getColor(){return _getColor.apply(this,arguments)}function _getColor(){return(_getColor=_asyncToGenerator(_regeneratorRuntime().mark(function t(){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,getPlayerColor();case 2:color=t.sent,console.log(color);case 4:case"end":return t.stop()}},t)}))).apply(this,arguments)}function getPlayersArr(){return _getPlayersArr.apply(this,arguments)}function _getPlayersArr(){return(_getPlayersArr=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,getPlayers(gameId);case 2:return e=t.sent,t.abrupt("return",e);case 4:case"end":return t.stop()}},t)}))).apply(this,arguments)}function setTrainColor(t,e,r){for(var n=0;n<t.trains.length;n++)t.trains[n].isTaken&&t.trains[n].userLogin===e&&(t.trains[n].color=r);return t}routeBox.forEach(function(e){e.addEventListener("click",function(){var t=e.id.slice(1),t=parseInt(t);console.log(t),checkAvailability(t,currentBoard,cardsQuantity)})});var placeTrain=function(t,e,r){t={player:t,gameId:gameId,boardPlaceId:e,used:r};fetch(url+"/game/turn/place",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(function(t){return t.ok||403===t.status&&(popupText.textContent="Not your turn",popupBtn.addEventListener("click",function(){popup.classList.remove("showAlertPopup")}),popup.classList.add("showAlertPopup")),t.json()}).then(function(t){console.log(t)}).catch(function(t){console.error("There was a problem with the fetch operation:",t)})};function checkAvailability(e,t,r){var n,o,a,i=t.find(function(t){return t.id===e}),t=null;i?"GREY"===i.color?(a=Object.keys(r),n=[],a.forEach(function(t){(r[t]||0)>=i.cost&&n.push(t)}),1===n.length?(t=n[0],placeTrain(playerName,e,t),console.log("You can take the ".concat(i.color," field!"))):1<n.length?(createTrainPopupCards(n),trainPopup.style.display="flex",chooseCardColor(playerName,e)):(setPopup("You don't have enough cards"),showPopup(),alertPopupBtn.addEventListener("click",removePopup))):(o=(a=[i.color,"RAINBOW"].map(function(t){return r[t]||0}))[0]>=i.cost,a=a[1]>=i.cost,o?(t=i.color,placeTrain(playerName,e,t),console.log("You can take the ".concat(i.color," field!"))):a?(t="RAINBOW",placeTrain(playerName,e,t),console.log("You can take the ".concat(i.color," field!"))):(setPopup("You don't have enough cards"),showPopup(),alertPopupBtn.addEventListener("click",removePopup))):console.log("Field with id ".concat(e," does not exist.")),t&&console.log("Used color: ".concat(t))}function createTrainPopupCards(t){var n=document.querySelector(".trainPopupCardsBox");return n.classList.add("trainPopupCardsBox"),t.forEach(function(t,e){var r=document.createElement("img");r.classList.add("trainPopupCard"),r.classList.add("card-".concat(e)),r.src="../dist/img/Train".concat(t,"Card.png"),r.alt="karta miejsc",n.appendChild(r)}),n}function chooseCardColor(r,n){var o;document.querySelectorAll(".trainPopupCard").forEach(function(e){e.addEventListener("click",function(){var t=e.src,t=t.substring(t.indexOf("Train")+5,t.indexOf("Card"));o=t,console.log("Used color: ".concat(o)),trainPopup.style.display="none",placeTrain(r,n,o)})})}function setTrainsOnBoard(t){return _setTrainsOnBoard.apply(this,arguments)}function _setTrainsOnBoard(){return(_setTrainsOnBoard=_asyncToGenerator(_regeneratorRuntime().mark(function t(i){var c,e,u;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:c=document.querySelectorAll(".routeBox"),e=_regeneratorRuntime().mark(function t(){var e,r,n,o,a;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(r=c[u].id.substring(1),e=parseInt(r),(r=i.find(function(t){return t.id==e})).isTaken&&r.player)return n=c[u].querySelectorAll("*"),t.next=7,getPlayerColor(r.player);t.next=9;break;case 7:for(o=t.sent,a=0;a<n.length;a++)n[a].style.backgroundImage="url('../dist/img/".concat(o,".png')"),n[a].style.pointerEvents="none";case 9:case"end":return t.stop()}},t)}),u=0;case 3:if(u<c.length)return t.delegateYield(e(),"t0",5);t.next=8;break;case 5:u++,t.next=3;break;case 8:case"end":return t.stop()}},t)}))).apply(this,arguments)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
